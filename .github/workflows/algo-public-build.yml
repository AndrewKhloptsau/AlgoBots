name: AlgoPublic build
on:
  push:
    branches: [master,develop]

  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        type: string
env:
  BUILD_OUTPUT_FOLDER: .build/build.output

jobs:
  build:
    runs-on: windows-latest
    env:
      ArtifactName: 'Algo PublicBots'
      BuildScriptPath: .build/build.ps1
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Run PowerShell script
      run: ${{env.BuildScriptPath}}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ArtifactName }}
        path: ${{ env.BUILD_OUTPUT_FOLDER }}


  create-tag:
    if: ${{ github.workflow_dispatch.releaseVersion != '' }}
    runs-on: ubuntu-latest
    needs: build
    outputs:
      BUILD_TAG: ${{ steps.save-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3

      - id: save-tag
        name: Create tag
        run: echo "tag=AlgoBots-v${{ github.event.inputs.releaseVersion }}" >> $GITHUB_OUTPUT

      - name: Push tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.save-tag.outputs.tag }}
          message: "Release ${{ steps.save-tag.outputs.tag }}"
          force_push_tag: true


  # create-release:
  #   runs-on: ubuntu-latest
  #   needs: [build, create-tag]
  #   env:
  #     ReleaseNote: "ReleaseNote.md"
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: ${{ needs.build.outputs.ARTIFACT_NAME }}
  #         path: ${{ env.OUTPUT_FOLDER }}

  #     - name: Create archive name
  #       run: echo "ArtifactZip=HSMServer-${{ needs.build.outputs.VERSION }}.zip" >> $GITHUB_ENV

  #     - name: Check archive name
  #       run: echo $ArtifactZip

  #     - name: Archive artifacts
  #       uses: thedoctor0/zip-release@main
  #       with:
  #         type: 'zip'
  #         path: ${{ env.OUTPUT_FOLDER }}
  #         filename: ${{ env.ArtifactZip }}

  #     - name: Create release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         name: ${{ needs.build.outputs.ARTIFACT_NAME }}
  #         tag: ${{ needs.create-tag.outputs.BUILD_TAG }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         artifacts: ${{ env.ArtifactZip }}
  #         prerelease: ${{ github.event.inputs.isPreRelease }}
  #         bodyFile: ${{ env.ReleaseNote }}
  #         allowUpdates: true