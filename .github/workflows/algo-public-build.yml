name: AlgoPublic build
run-name: AlgoPublic build ${{ inputs.releaseVersion }}
on:
  push:
    branches: [master, develop]

  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        type: string
env:
  ARTIFACT_NAME: 'Algo PublicBots'
  BUILD_OUTPUT_FOLDER: .github/build/build.output

jobs:
  build:
    runs-on: windows-latest
    env:
      BuildScriptPath: .github/build/build.ps1
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Run PowerShell script
      run: ${{ env.BuildScriptPath }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.BUILD_OUTPUT_FOLDER }}

  create-tag:
    if: ${{ inputs.releaseVersion != '' }}
    runs-on: ubuntu-latest
    needs: build
    outputs:
      BUILD_TAG: ${{ steps.save-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3

      - id: save-tag
        name: Create tag
        run: echo "tag=AlgoBots-v${{ inputs.releaseVersion }}" >> $GITHUB_OUTPUT

      - name: Push tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.save-tag.outputs.tag }}
          message: "Release ${{ steps.save-tag.outputs.tag }}"
          force_push_tag: true

  update-package-names:
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - uses: actions/checkout@v3

      - name: Detected packages
        run: ls -l ${{ env.BUILD_OUTPUT_FOLDER }}

      # - name: Rename packages
      #   run: for FILE in ${{ env.BUILD_OUTPUT_FOLDER }}/*.ttalgo; do BASE_FILE="${FILE%.*}(${{ needs.create-tag.outputs.BUILD_TAG }}).ttalgo"; mv $FILE $BASE_FILE; done

  create-release:
    runs-on: ubuntu-latest
    needs: [create-tag, update-package-names]
    env:
      ReleaseNote: "ReleaseNote.md"
      GithubToken: ${{ secrets.RELEASE_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.BUILD_OUTPUT_FOLDER }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.create-tag.outputs.BUILD_TAG }}
          tag: ${{ needs.create-tag.outputs.BUILD_TAG }}
          token: ${{ env.GithubToken }}
          artifacts: ${{ env.BUILD_OUTPUT_FOLDER }}/*.ttalgo
          bodyFile: ${{ env.ReleaseNote }}
          allowUpdates: true